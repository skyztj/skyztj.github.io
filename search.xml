<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Vagrant+virtualBox+Docker]]></title>
    <url>%2F2019%2F08%2F13%2FVagrant-virtualBox-Docker%2F</url>
    <content type="text"><![CDATA[下载最新的镜像文件Vagrant与最新的安装包virtualBox 一，使用vagrant+virtualBox搭建linux虚拟机！1.添加本地box在cmd窗口中，执行如下命令： 1vagrant box add centos7 d:\vagrantVirtualBox\dev\CentOS7.box vagrant box add {title} {url} 说明：title 创建虚拟机的别名；url 是下载到本地box的路径，也可以是服务器端的URL，也可以是中央仓库的镜像名称。 2.在d:\vagrantVirtualBox\dev 目录下打开cmd黑窗口1vagrant init centos7 说明：初始化刚才加入的box，如果访问外网速度比较快，可以直接跳过1（添加本地box步骤，直接在远程下载） 3.配置docker下载地址执行第二步后，会有Vagrantfile文件生成。编辑该文件尾部加入 1234config.vm.provision "shell", inline: &lt;&lt;-SHELL apt-get update curl -s https://get.docker.com|sh SHELL 说明：在SHELL内容中 可以写linux命令，读者可自定义，虚拟机启动后需要的步骤。本文只是下载了docker。 4.启动本地环境1vagrant up 启动控制台输出 注：启动日志中包含了ssh连接信息以及用户名等等 5.修改root密码，ssh配置方便远程连接1vagrant ssh 说明：连接上虚拟机 6.接下来的操作都是在linux虚拟机中完成的6.1 修改root密码​ 执行如下命令，并输入新密码，切换到root用户下 6.2 ssh配置​ 由于ssh默认是用ca认证，没开放密码验证，故有此步骤 12cd /etc/sshvi sshd_config 将内容中的 1234#To disable tunneled clear text passwords, change to no here!#PasswordAuthentication yes#PermitEmptyPasswords noPasswordAuthentication no 改为 1234# To disable tunneled clear text passwords, change to no here!PasswordAuthentication yes#PermitEmptyPasswords no#PasswordAuthentication no 重启sshd.service服务 1service sshd restart 用xshell进行连接 即连接成功 以下是vagrant一些常用的命令 命令 作用 vagrant box add 添加box的操作 vagrant init 初始化box的操作，会生成vagrant的配置文件Vagrantfile vagrant up 启动本地环境 vagrant ssh 通过ssh登录本地环境所在虚拟机 vagrant halt 关闭本地环境 vagrant suspend 暂停本地环境 vagrant resume 恢复本地环境 vagrant reload 修改了Vagrantfile后，使之生效（相当于先 halt，再 up） vagrant destroy 彻底移除本地环境 vagrant box list 显示当前已经添加的box列表 vagrant box remove 删除相应的box vagrant package 打包命令，可以把当前的运行的虚拟机环境进行打包 vagrant plugin 用于安装卸载插件 vagrant status 获取当前虚拟机的状态 vagrant global-status 显示当前用户Vagrant的所有环境状态 二，docker环境的搭建Docker的三个主要概念： Docker image：镜像是只读的，镜像中包含有需要运行的文件。镜像用来创建container，一个镜像可以运行多个container；镜像可以通过Dockerfile创建，也可以从Docker hub/registry上下载。 Docker container：容器是Docker的运行组件，启动一个镜像就是一个容器，容器是一个隔离环境，多个容器之间不会相互影响，保证容器中的程序运行在一个相对安全的环境中。 Docker hub/registry: 共享和管理Docker镜像，用户可以上传或者下载上面的镜像，官方地址为https://registry.hub.docker.com/，也可以搭建自己私有的Docker registry。 Docker安装1.建议在linux环境下安装Docker，window环境搭建比较复杂且容易出错，使用Centos7+yum来安装Docker环境很方便。 Docker 软件包已经包括在默认的 CentOS-Extras 软件源里。因此想要安装 docker，只需要运行下面的 yum 命令： 1yum install docker 安装完成！ 2.安装完成后，使用下面的命令来启动 docker 服务，并将其设置为开机启动： 12service docker startchkconfig docker on 查看docker运行状态 1ps -ef | grep docker ps -ef | grep docker 查看docker运行状态 到此docker已完成安装 1docker --help 常用命令 拉取docker镜像 1docker pull image_name 查看宿主机上的镜像，Docker镜像保存在/var/lib/docker目录下: 1docker images 删除镜像 1docker rmi docker.io/tomcat:7.0.77-jre7 或者 docker rmi b39c68b7af30 查看当前有哪些容器正在运行 1docker ps 查看所有容器 1docker ps -a 启动、停止、重启容器命令： 123docker start container_name/container_iddocker stop container_name/container_iddocker restart container_name/container_id 后台启动一个容器后，如果想进入到这个容器，可以使用attach命令： 1docker attach container_name/container_id 删除容器的命令： 1docker rm container_name/container_id 删除所有停止的容器： 1docker rm $(docker ps -a -q) 查看当前系统Docker信息 1docker info 从Docker hub上下载某个镜像: 12docker pull centos:latestdocker pull centos:latest 查找Docker Hub上的nginx镜像 1docker search nginx]]></content>
      <categories>
        <category>学习</category>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>Vagrant+virtualBox</tag>
      </tags>
  </entry>
</search>
