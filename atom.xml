<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Sky</title>
  
  <subtitle>blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://nayijia.xyz/"/>
  <updated>2019-08-06T03:25:02.647Z</updated>
  <id>http://nayijia.xyz/</id>
  
  <author>
    <name>ztj</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>windows_command</title>
    <link href="http://nayijia.xyz/2019/08/06/windows-command/"/>
    <id>http://nayijia.xyz/2019/08/06/windows-command/</id>
    <published>2019-08-06T03:25:02.000Z</published>
    <updated>2019-08-06T03:25:02.647Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>tar</title>
    <link href="http://nayijia.xyz/2019/07/31/tar/"/>
    <id>http://nayijia.xyz/2019/07/31/tar/</id>
    <published>2019-07-31T02:24:31.000Z</published>
    <updated>2019-08-06T04:33:50.258Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.runoob.com/linux/linux-command-manual.html" target="_blank" rel="noopener">linux命令大全</a></p><p>tar</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.runoob.com/linux/linux-command-manual.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;linux命令大全&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;tar&lt;/p&gt;

      
    
    </summary>
    
      <category term="学习" scheme="http://nayijia.xyz/categories/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="Linux" scheme="http://nayijia.xyz/categories/%E5%AD%A6%E4%B9%A0/Linux/"/>
    
    
      <category term="Linux - 命令" scheme="http://nayijia.xyz/tags/Linux-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Java诊断工具-Arthas</title>
    <link href="http://nayijia.xyz/2019/07/29/Java%E8%AF%8A%E6%96%AD%E5%B7%A5%E5%85%B7-Arthas/"/>
    <id>http://nayijia.xyz/2019/07/29/Java诊断工具-Arthas/</id>
    <published>2019-07-29T05:48:47.000Z</published>
    <updated>2019-08-06T07:33:55.667Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/arthas.png" target="_blank" rel="noopener"><img src="https://github.com/alibaba/arthas/raw/master/site/src/site/sphinx/arthas.png" alt="arthas"></a></p><p><a href="https://github.com/alibaba/arthas/blob/master/README_CN.md" target="_blank" rel="noopener">Arthas</a> 是Alibaba开源的Java诊断工具。</p><p>当你遇到以下类似问题而束手无策时，<code>Arthas</code>可以帮助你解决：</p><ol><li>这个类从哪个 jar 包加载的？为什么会报各种类相关的 Exception？</li><li>我改的代码为什么没有执行到？难道是我没 commit？分支搞错了？</li><li>遇到问题无法在线上 debug，难道只能通过加日志再重新发布吗？</li><li>线上遇到某个用户的数据处理有问题，但线上同样无法 debug，线下无法重现！</li><li>是否有一个全局视角来查看系统的运行状况？</li><li>有什么办法可以监控到JVM的实时运行状态？</li></ol><p><code>Arthas</code>支持JDK 6+，支持Linux/Mac/Windows，采用命令行交互模式，同时提供丰富的 <code>Tab</code> 自动补全功能，进一步方便进行问题的定位和诊断。</p><a id="more"></a><h3 id="在线教程-推荐"><a href="#在线教程-推荐" class="headerlink" title="在线教程(推荐)"></a>在线教程(推荐)</h3><p><a href="https://alibaba.github.io/arthas/arthas-tutorials?language=cn&amp;id=arthas-basics" target="_blank" rel="noopener">基础教程</a>  </p><p><a href="https://alibaba.github.io/arthas/arthas-tutorials?language=cn&id=arthas-advanced" target="_blank" rel="noopener">进阶教程</a>  </p><ul><li><p><a href="https://github.com/alibaba/arthas/issues/570" target="_blank" rel="noopener">通过Cloud Toolkit插件使用Arthas一键诊断远程服务器</a></p></li><li><p><a href="https://alibaba.github.io/arthas/index.html" target="_blank" rel="noopener">Docs</a></p></li></ul><h1 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h1><h2 id="1-启动Demo"><a href="#1-启动Demo" class="headerlink" title="1. 启动Demo"></a>1. 启动Demo</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://alibaba.github.io/arthas/arthas-demo.jar</span><br><span class="line">java -jar arthas-demo.jar</span><br></pre></td></tr></table></figure><p><code>arthas-demo</code>是一个简单的程序，每隔一秒生成一个随机数，再执行质因式分解，并打印出分解结果。</p><p><code>arthas-demo</code>源代码：<a href="https://github.com/alibaba/arthas/blob/master/demo/src/main/java/demo/MathGame.java" target="_blank" rel="noopener">查看</a></p><h2 id="2-启动arthas"><a href="#2-启动arthas" class="headerlink" title="2. 启动arthas"></a>2. 启动arthas</h2><p>在命令行下面执行（使用和目标进程一致的用户启动，否则可能attach失败）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://alibaba.github.io/arthas/arthas-boot.jar</span><br><span class="line">java -jar arthas-boot.jar</span><br></pre></td></tr></table></figure><ul><li>执行该程序的用户需要和目标进程具有相同的权限。比如以<code>admin</code>用户来执行：<code>sudo su admin &amp;&amp; java -jar arthas-boot.jar</code> 或 <code>sudo -u admin -EH java -jar arthas-boot.jar</code>。</li><li>如果attach不上目标进程，可以查看<code>~/logs/arthas/</code> 目录下的日志。</li><li>如果下载速度比较慢，可以使用aliyun的镜像：<code>java -jar arthas-boot.jar --repo-mirror aliyun --use-http</code></li><li><code>java -jar arthas-boot.jar -h</code> 打印更多参数信息。</li></ul><p>选择应用java进程：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ $ java -jar arthas-boot.jar</span><br><span class="line">* [1]: 35542</span><br><span class="line">  [2]: 71560 arthas-demo.jar</span><br></pre></td></tr></table></figure><p>Demo进程是第2个，则输入2，再输入<code>回车/enter</code>。Arthas会attach到目标进程上，并输出日志：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[INFO] Try to attach process 71560</span><br><span class="line">[INFO] Attach process 71560 success.</span><br><span class="line">[INFO] arthas-client connect 127.0.0.1 3658</span><br><span class="line">  ,---.  ,------. ,--------.,--.  ,--.  ,---.   ,---.</span><br><span class="line"> /  O  \ |  .--. &apos;&apos;--.  .--&apos;|  &apos;--&apos;  | /  O  \ &apos;   .-&apos;</span><br><span class="line">|  .-.  ||  &apos;--&apos;.&apos;   |  |   |  .--.  ||  .-.  |`.  `-.</span><br><span class="line">|  | |  ||  |\  \    |  |   |  |  |  ||  | |  |.-&apos;    |</span><br><span class="line">`--&apos; `--&apos;`--&apos; &apos;--&apos;   `--&apos;   `--&apos;  `--&apos;`--&apos; `--&apos;`-----&apos;</span><br><span class="line"> </span><br><span class="line">wiki: https://alibaba.github.io/arthas</span><br><span class="line">version: 3.0.5.20181127201536</span><br><span class="line">pid: 71560</span><br><span class="line">time: 2018-11-28 19:16:24</span><br><span class="line"> </span><br><span class="line">$</span><br></pre></td></tr></table></figure><h2 id="3-查看dashboard"><a href="#3-查看dashboard" class="headerlink" title="3. 查看dashboard"></a>3. 查看dashboard</h2><p>输入<a href="https://alibaba.github.io/arthas/dashboard.html" target="_blank" rel="noopener">dashboard</a>，按<code>回车/enter</code>，会展示当前进程的信息，按<code>ctrl+c</code>可以中断执行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">$ dashboard</span><br><span class="line">ID     NAME                   GROUP          PRIORI STATE  %CPU    TIME   INTERRU DAEMON</span><br><span class="line">17     pool-2-thread-1        system         5      WAITIN 67      0:0    false   false</span><br><span class="line">27     Timer-for-arthas-dashb system         10     RUNNAB 32      0:0    false   true</span><br><span class="line">11     AsyncAppender-Worker-a system         9      WAITIN 0       0:0    false   true</span><br><span class="line">9      Attach Listener        system         9      RUNNAB 0       0:0    false   true</span><br><span class="line">3      Finalizer              system         8      WAITIN 0       0:0    false   true</span><br><span class="line">2      Reference Handler      system         10     WAITIN 0       0:0    false   true</span><br><span class="line">4      Signal Dispatcher      system         9      RUNNAB 0       0:0    false   true</span><br><span class="line">26     as-command-execute-dae system         10     TIMED_ 0       0:0    false   true</span><br><span class="line">13     job-timeout            system         9      TIMED_ 0       0:0    false   true</span><br><span class="line">1      main                   main           5      TIMED_ 0       0:0    false   false</span><br><span class="line">14     nioEventLoopGroup-2-1  system         10     RUNNAB 0       0:0    false   false</span><br><span class="line">18     nioEventLoopGroup-2-2  system         10     RUNNAB 0       0:0    false   false</span><br><span class="line">23     nioEventLoopGroup-2-3  system         10     RUNNAB 0       0:0    false   false</span><br><span class="line">15     nioEventLoopGroup-3-1  system         10     RUNNAB 0       0:0    false   false</span><br><span class="line">Memory             used   total max    usage GC</span><br><span class="line">heap               32M    155M  1820M  1.77% gc.ps_scavenge.count  4</span><br><span class="line">ps_eden_space      14M    65M   672M   2.21% gc.ps_scavenge.time(m 166</span><br><span class="line">ps_survivor_space  4M     5M    5M           s)</span><br><span class="line">ps_old_gen         12M    85M   1365M  0.91% gc.ps_marksweep.count 0</span><br><span class="line">nonheap            20M    23M   -1           gc.ps_marksweep.time( 0</span><br><span class="line">code_cache         3M     5M    240M   1.32% ms)</span><br><span class="line">Runtime</span><br><span class="line">os.name                Mac OS X</span><br><span class="line">os.version             10.13.4</span><br><span class="line">java.version           1.8.0_162</span><br><span class="line">java.home              /Library/Java/JavaVir</span><br><span class="line">                       tualMachines/jdk1.8.0</span><br><span class="line">                       _162.jdk/Contents/Hom</span><br><span class="line">                       e/jre</span><br></pre></td></tr></table></figure><h2 id="4-通过thread命令来获取到arthas-demo进程的Main-Class"><a href="#4-通过thread命令来获取到arthas-demo进程的Main-Class" class="headerlink" title="4. 通过thread命令来获取到arthas-demo进程的Main Class"></a>4. 通过thread命令来获取到<code>arthas-demo</code>进程的Main Class</h2><p><code>thread 1</code>会打印线程ID 1的栈，通常是main函数的线程。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ thread 1 | grep &apos;main(&apos;</span><br><span class="line">    at demo.MathGame.main(MathGame.java:17)</span><br></pre></td></tr></table></figure><h2 id="5-通过jad来反编译Main-Class"><a href="#5-通过jad来反编译Main-Class" class="headerlink" title="5. 通过jad来反编译Main Class"></a>5. 通过jad来反编译Main Class</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">$ jad demo.MathGame</span><br><span class="line"> </span><br><span class="line">ClassLoader:</span><br><span class="line">+-sun.misc.Launcher$AppClassLoader@3d4eac69</span><br><span class="line">  +-sun.misc.Launcher$ExtClassLoader@66350f69</span><br><span class="line"> </span><br><span class="line">Location:</span><br><span class="line">/tmp/arthas-demo.jar</span><br><span class="line"> </span><br><span class="line">/*</span><br><span class="line"> * Decompiled with CFR 0_132.</span><br><span class="line"> */</span><br><span class="line">package demo;</span><br><span class="line"> </span><br><span class="line">import java.io.PrintStream;</span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.Iterator;</span><br><span class="line">import java.util.List;</span><br><span class="line">import java.util.Random;</span><br><span class="line">import java.util.concurrent.TimeUnit;</span><br><span class="line"> </span><br><span class="line">public class MathGame &#123;</span><br><span class="line">    private static Random random = new Random();</span><br><span class="line">    private int illegalArgumentCount = 0;</span><br><span class="line"> </span><br><span class="line">    public static void main(String[] args) throws InterruptedException &#123;</span><br><span class="line">        MathGame game = new MathGame();</span><br><span class="line">        do &#123;</span><br><span class="line">            game.run();</span><br><span class="line">            TimeUnit.SECONDS.sleep(1L);</span><br><span class="line">        &#125; while (true);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    public void run() throws InterruptedException &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            int number = random.nextInt();</span><br><span class="line">            List&lt;Integer&gt; primeFactors = this.primeFactors(number);</span><br><span class="line">            MathGame.print(number, primeFactors);</span><br><span class="line">        &#125;</span><br><span class="line">        catch (Exception e) &#123;</span><br><span class="line">            System.out.println(String.format(&quot;illegalArgumentCount:%3d, &quot;, this.illegalArgumentCount) + e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    public static void print(int number, List&lt;Integer&gt; primeFactors) &#123;</span><br><span class="line">        StringBuffer sb = new StringBuffer(&quot;&quot; + number + &quot;=&quot;);</span><br><span class="line">        Iterator&lt;Integer&gt; iterator = primeFactors.iterator();</span><br><span class="line">        while (iterator.hasNext()) &#123;</span><br><span class="line">            int factor = iterator.next();</span><br><span class="line">            sb.append(factor).append(&apos;*&apos;);</span><br><span class="line">        &#125;</span><br><span class="line">        if (sb.charAt(sb.length() - 1) == &apos;*&apos;) &#123;</span><br><span class="line">            sb.deleteCharAt(sb.length() - 1);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(sb);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    public List&lt;Integer&gt; primeFactors(int number) &#123;</span><br><span class="line">        if (number &lt; 2) &#123;</span><br><span class="line">            ++this.illegalArgumentCount;</span><br><span class="line">            throw new IllegalArgumentException(&quot;number is: &quot; + number + &quot;, need &gt;= 2&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        ArrayList&lt;Integer&gt; result = new ArrayList&lt;Integer&gt;();</span><br><span class="line">        int i = 2;</span><br><span class="line">        while (i &lt;= number) &#123;</span><br><span class="line">            if (number % i == 0) &#123;</span><br><span class="line">                result.add(i);</span><br><span class="line">                number /= i;</span><br><span class="line">                i = 2;</span><br><span class="line">                continue;</span><br><span class="line">            &#125;</span><br><span class="line">            ++i;</span><br><span class="line">        &#125;</span><br><span class="line">        return result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">Affect(row-cnt:1) cost in 970 ms.</span><br></pre></td></tr></table></figure><h2 id="6-watch"><a href="#6-watch" class="headerlink" title="6. watch"></a>6. watch</h2><p>通过<a href="https://alibaba.github.io/arthas/watch.html" target="_blank" rel="noopener">watch</a>命令来查看<code>demo.MathGame#primeFactors</code>函数的返回值：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">$ watch demo.MathGame primeFactors returnObj</span><br><span class="line">Press Ctrl+C to abort.</span><br><span class="line">Affect(class-cnt:1 , method-cnt:1) cost in 107 ms.</span><br><span class="line">ts=2018-11-28 19:22:30; [cost=1.715367ms] result=null</span><br><span class="line">ts=2018-11-28 19:22:31; [cost=0.185203ms] result=null</span><br><span class="line">ts=2018-11-28 19:22:32; [cost=19.012416ms] result=@ArrayList[</span><br><span class="line">    @Integer[5],</span><br><span class="line">    @Integer[47],</span><br><span class="line">    @Integer[2675531],</span><br><span class="line">]</span><br><span class="line">ts=2018-11-28 19:22:33; [cost=0.311395ms] result=@ArrayList[</span><br><span class="line">    @Integer[2],</span><br><span class="line">    @Integer[5],</span><br><span class="line">    @Integer[317],</span><br><span class="line">    @Integer[503],</span><br><span class="line">    @Integer[887],</span><br><span class="line">]</span><br><span class="line">ts=2018-11-28 19:22:34; [cost=10.136007ms] result=@ArrayList[</span><br><span class="line">    @Integer[2],</span><br><span class="line">    @Integer[2],</span><br><span class="line">    @Integer[3],</span><br><span class="line">    @Integer[3],</span><br><span class="line">    @Integer[31],</span><br><span class="line">    @Integer[717593],</span><br><span class="line">]</span><br><span class="line">ts=2018-11-28 19:22:35; [cost=29.969732ms] result=@ArrayList[</span><br><span class="line">    @Integer[5],</span><br><span class="line">    @Integer[29],</span><br><span class="line">    @Integer[7651739],</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>更多的功能可以查看<a href="https://alibaba.github.io/arthas/advanced-use.html" target="_blank" rel="noopener">进阶使用</a>。</p><h2 id="7-退出arthas"><a href="#7-退出arthas" class="headerlink" title="7. 退出arthas"></a>7. 退出arthas</h2><p>如果只是退出当前的连接，可以用<code>quit</code>或者<code>exit</code>命令。Attach到目标进程上的arthas还会继续运行，端口会保持开放，下次连接时可以直接连接上。</p><p>如果想完全退出arthas，可以执行<code>shutdown</code>命令。</p><h1 id="进阶使用"><a href="#进阶使用" class="headerlink" title="进阶使用"></a>进阶使用</h1><h2 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h2><ul><li>help——查看命令帮助信息</li><li><a href="https://alibaba.github.io/arthas/cat.html" target="_blank" rel="noopener">cat</a>——打印文件内容，和linux里的cat命令类似</li><li><a href="https://alibaba.github.io/arthas/pwd.html" target="_blank" rel="noopener">pwd</a>——返回当前的工作目录，和linux命令类似</li><li>cls——清空当前屏幕区域</li><li>session——查看当前会话的信息</li><li><a href="https://alibaba.github.io/arthas/reset.html" target="_blank" rel="noopener">reset</a>——重置增强类，将被 Arthas 增强过的类全部还原，Arthas 服务端关闭时会重置所有增强过的类</li><li>version——输出当前目标 Java 进程所加载的 Arthas 版本号</li><li>history——打印命令历史</li><li>quit——退出当前 Arthas 客户端，其他 Arthas 客户端不受影响</li><li>shutdown——关闭 Arthas 服务端，所有 Arthas 客户端全部退出</li><li><a href="https://alibaba.github.io/arthas/keymap.html" target="_blank" rel="noopener">keymap</a>——Arthas快捷键列表及自定义快捷键</li></ul><h2 id="jvm相关"><a href="#jvm相关" class="headerlink" title="jvm相关"></a>jvm相关</h2><ul><li><a href="https://alibaba.github.io/arthas/dashboard.html" target="_blank" rel="noopener">dashboard</a>——当前系统的实时数据面板</li><li><a href="https://alibaba.github.io/arthas/thread.html" target="_blank" rel="noopener">thread</a>——查看当前 JVM 的线程堆栈信息</li><li><a href="https://alibaba.github.io/arthas/jvm.html" target="_blank" rel="noopener">jvm</a>——查看当前 JVM 的信息</li><li><a href="https://alibaba.github.io/arthas/sysprop.html" target="_blank" rel="noopener">sysprop</a>——查看和修改JVM的系统属性</li><li><a href="https://alibaba.github.io/arthas/sysenv.html" target="_blank" rel="noopener">sysenv</a>——查看JVM的环境变量</li><li><a href="https://alibaba.github.io/arthas/getstatic.html" target="_blank" rel="noopener">getstatic</a>——查看类的静态属性</li><li><strong>New!</strong> <a href="https://alibaba.github.io/arthas/ognl.html" target="_blank" rel="noopener">ognl</a>——执行ognl表达式</li><li><strong>New!</strong> <a href="https://alibaba.github.io/arthas/mbean.html" target="_blank" rel="noopener">mbean</a>——查看 Mbean 的信息</li></ul><h2 id="class-classloader相关"><a href="#class-classloader相关" class="headerlink" title="class/classloader相关"></a>class/classloader相关</h2><ul><li><a href="https://alibaba.github.io/arthas/sc.html" target="_blank" rel="noopener">sc</a>——查看JVM已加载的类信息</li><li><a href="https://alibaba.github.io/arthas/sm.html" target="_blank" rel="noopener">sm</a>——查看已加载类的方法信息</li><li><a href="https://alibaba.github.io/arthas/jad.html" target="_blank" rel="noopener">jad</a>——反编译指定已加载类的源码</li><li><a href="https://alibaba.github.io/arthas/mc.html" target="_blank" rel="noopener">mc</a>——内存编绎器，内存编绎<code>.java</code>文件为<code>.class</code>文件</li><li><a href="https://alibaba.github.io/arthas/redefine.html" target="_blank" rel="noopener">redefine</a>——加载外部的<code>.class</code>文件，redefine到JVM里</li><li><a href="https://alibaba.github.io/arthas/dump.html" target="_blank" rel="noopener">dump</a>——dump 已加载类的 byte code 到特定目录</li><li><a href="https://alibaba.github.io/arthas/classloader.html" target="_blank" rel="noopener">classloader</a>——查看classloader的继承树，urls，类加载信息，使用classloader去getResource</li></ul><h2 id="monitor-watch-trace相关"><a href="#monitor-watch-trace相关" class="headerlink" title="monitor/watch/trace相关"></a>monitor/watch/trace相关</h2><blockquote><p>请注意，这些命令，都通过字节码增强技术来实现的，会在指定类的方法中插入一些切面来实现数据统计和观测，因此在线上、预发使用时，请尽量明确需要观测的类、方法以及条件，诊断结束要执行 <code>shutdown</code> 或将增强过的类执行 <code>reset</code> 命令。</p></blockquote><ul><li><a href="https://alibaba.github.io/arthas/monitor.html" target="_blank" rel="noopener">monitor</a>——方法执行监控</li><li><a href="https://alibaba.github.io/arthas/watch.html" target="_blank" rel="noopener">watch</a>——方法执行数据观测</li><li><a href="https://alibaba.github.io/arthas/trace.html" target="_blank" rel="noopener">trace</a>——方法内部调用路径，并输出方法路径上的每个节点上耗时</li><li><a href="https://alibaba.github.io/arthas/stack.html" target="_blank" rel="noopener">stack</a>——输出当前方法被调用的调用路径</li><li><a href="https://alibaba.github.io/arthas/tt.html" target="_blank" rel="noopener">tt</a>——方法执行数据的时空隧道，记录下指定方法每次调用的入参和返回信息，并能对这些不同的时间下调用进行观测</li></ul><h2 id="options"><a href="#options" class="headerlink" title="options"></a>options</h2><ul><li><a href="https://alibaba.github.io/arthas/options.html" target="_blank" rel="noopener">options</a>——查看或设置Arthas全局开关</li></ul><h2 id="管道"><a href="#管道" class="headerlink" title="管道"></a>管道</h2><p>Arthas支持使用管道对上述命令的结果进行进一步的处理，如<code>sm java.lang.String * | grep &#39;index&#39;</code></p><ul><li>grep——搜索满足条件的结果</li><li>plaintext——将命令的结果去除ANSI颜色</li><li>wc——按行统计输出结果</li></ul><h2 id="后台异步任务"><a href="#后台异步任务" class="headerlink" title="后台异步任务"></a>后台异步任务</h2><p>当线上出现偶发的问题，比如需要watch某个条件，而这个条件一天可能才会出现一次时，异步后台任务就派上用场了，详情请参考<a href="https://alibaba.github.io/arthas/async.html" target="_blank" rel="noopener">这里</a></p><ul><li>使用 &gt; 将结果重写向到日志文件，使用 &amp; 指定命令是后台运行，session断开不影响任务执行（生命周期默认为1天）</li><li>jobs——列出所有job</li><li>kill——强制终止任务</li><li>fg——将暂停的任务拉到前台执行</li><li>bg——将暂停的任务放到后台执行</li></ul><h2 id="Web-Console"><a href="#Web-Console" class="headerlink" title="Web Console"></a>Web Console</h2><p>通过websocket连接Arthas。</p><ul><li><a href="https://alibaba.github.io/arthas/web-console.html" target="_blank" rel="noopener">Web Console</a></li></ul><h2 id="其他特性"><a href="#其他特性" class="headerlink" title="其他特性"></a>其他特性</h2><ul><li><a href="https://alibaba.github.io/arthas/async.html" target="_blank" rel="noopener">异步命令支持</a></li><li><a href="https://alibaba.github.io/arthas/save-log.html" target="_blank" rel="noopener">执行结果存日志</a></li><li><a href="https://alibaba.github.io/arthas/batch-support.html" target="_blank" rel="noopener">批处理的支持</a></li><li><a href="https://github.com/alibaba/arthas/issues/11" target="_blank" rel="noopener">ognl表达式的用法说明</a></li></ul><h1 id="命令列表"><a href="#命令列表" class="headerlink" title="命令列表"></a>命令列表</h1><ul><li><a href="https://alibaba.github.io/arthas/dashboard.html" target="_blank" rel="noopener">dashboard</a></li><li><a href="https://alibaba.github.io/arthas/thread.html" target="_blank" rel="noopener">thread</a></li><li><a href="https://alibaba.github.io/arthas/jvm.html" target="_blank" rel="noopener">jvm</a></li><li><a href="https://alibaba.github.io/arthas/sysprop.html" target="_blank" rel="noopener">sysprop</a></li><li><a href="https://alibaba.github.io/arthas/sysenv.html" target="_blank" rel="noopener">sysenv</a></li><li><a href="https://alibaba.github.io/arthas/mbean.html" target="_blank" rel="noopener">mbean</a></li><li><a href="https://alibaba.github.io/arthas/getstatic.html" target="_blank" rel="noopener">getstatic</a></li><li><a href="https://alibaba.github.io/arthas/ognl.html" target="_blank" rel="noopener">ognl</a></li><li><a href="https://alibaba.github.io/arthas/sc.html" target="_blank" rel="noopener">sc</a></li><li><a href="https://alibaba.github.io/arthas/sm.html" target="_blank" rel="noopener">sm</a></li><li><a href="https://alibaba.github.io/arthas/dump.html" target="_blank" rel="noopener">dump</a></li><li><a href="https://alibaba.github.io/arthas/jad.html" target="_blank" rel="noopener">jad</a></li><li><a href="https://alibaba.github.io/arthas/classloader.html" target="_blank" rel="noopener">classloader</a></li><li><a href="https://alibaba.github.io/arthas/mc.html" target="_blank" rel="noopener">mc</a></li><li><a href="https://alibaba.github.io/arthas/redefine.html" target="_blank" rel="noopener">redefine</a></li><li><a href="https://alibaba.github.io/arthas/monitor.html" target="_blank" rel="noopener">monitor</a></li><li><a href="https://alibaba.github.io/arthas/watch.html" target="_blank" rel="noopener">watch</a></li><li><a href="https://alibaba.github.io/arthas/trace.html" target="_blank" rel="noopener">trace</a></li><li><a href="https://alibaba.github.io/arthas/stack.html" target="_blank" rel="noopener">stack</a></li><li><a href="https://alibaba.github.io/arthas/tt.html" target="_blank" rel="noopener">tt</a></li><li><a href="https://alibaba.github.io/arthas/cat.html" target="_blank" rel="noopener">cat</a></li><li><a href="https://alibaba.github.io/arthas/pwd.html" target="_blank" rel="noopener">pwd</a></li><li><a href="https://alibaba.github.io/arthas/options.html" target="_blank" rel="noopener">options</a></li></ul><h2 id="Arthas-基础命令"><a href="#Arthas-基础命令" class="headerlink" title="Arthas 基础命令"></a>Arthas 基础命令</h2><ul><li>help——查看命令帮助信息</li><li>cls——清空当前屏幕区域</li><li>session——查看当前会话的信息</li><li><a href="https://alibaba.github.io/arthas/reset.html" target="_blank" rel="noopener">reset</a>——重置增强类，将被 Arthas 增强过的类全部还原，Arthas 服务端关闭时会重置所有增强过的类</li><li>version——输出当前目标 Java 进程所加载的 Arthas 版本号</li><li>history——打印命令历史</li><li>quit——退出当前 Arthas 客户端，其他 Arthas 客户端不受影响</li><li>shutdown——关闭 Arthas 服务端，所有 Arthas 客户端全部退出</li><li><a href="https://alibaba.github.io/arthas/keymap.html" target="_blank" rel="noopener">keymap</a>——Arthas快捷键列表及自定义快捷键</li></ul><h3 id="牛刀小试"><a href="#牛刀小试" class="headerlink" title="牛刀小试"></a><em>牛刀小试</em></h3><p>测试环境使用arthas工具包获取内存里运行的数据</p><p>使用sc 查看目标类是否已经被加载</p><p><img src="D:%5Cblog%5Csource%5Cphotos~%60ACTZ$~L%7B$7H%60QA%5BT4X%60FQ.png" alt="img"></p><p>通过watch 查看getPropertyBeans（）方法返回的数据</p><p><img src="D:%5Cblog%5Csource%5Cphotos%5C1565062610770.png" alt="1565062610770"></p><p> 执行命令：watch com.ccservice.control.TrainPropertyMessage  getPropertyBeans  returnObj</p><p><img src="D:%5Cblog%5Csource%5Cphotos%5C1565062869194.png" alt="1565062869194"></p><p><img src="D:%5Cblog%5Csource%5Cphotos%5C1565062933540.png" alt="1565062933540"></p><p>获取到的数据，中文不过是乱码，后续再解决。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/arthas.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;img src=&quot;https://github.com/alibaba/arthas/raw/master/site/src/site/sphinx/arthas.png&quot; alt=&quot;arthas&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/alibaba/arthas/blob/master/README_CN.md&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Arthas&lt;/a&gt; 是Alibaba开源的Java诊断工具。&lt;/p&gt;
&lt;p&gt;当你遇到以下类似问题而束手无策时，&lt;code&gt;Arthas&lt;/code&gt;可以帮助你解决：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;这个类从哪个 jar 包加载的？为什么会报各种类相关的 Exception？&lt;/li&gt;
&lt;li&gt;我改的代码为什么没有执行到？难道是我没 commit？分支搞错了？&lt;/li&gt;
&lt;li&gt;遇到问题无法在线上 debug，难道只能通过加日志再重新发布吗？&lt;/li&gt;
&lt;li&gt;线上遇到某个用户的数据处理有问题，但线上同样无法 debug，线下无法重现！&lt;/li&gt;
&lt;li&gt;是否有一个全局视角来查看系统的运行状况？&lt;/li&gt;
&lt;li&gt;有什么办法可以监控到JVM的实时运行状态？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;Arthas&lt;/code&gt;支持JDK 6+，支持Linux/Mac/Windows，采用命令行交互模式，同时提供丰富的 &lt;code&gt;Tab&lt;/code&gt; 自动补全功能，进一步方便进行问题的定位和诊断。&lt;/p&gt;
    
    </summary>
    
      <category term="Java诊断工具" scheme="http://nayijia.xyz/categories/Java%E8%AF%8A%E6%96%AD%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Arthas" scheme="http://nayijia.xyz/tags/Arthas/"/>
    
  </entry>
  
  <entry>
    <title>redis</title>
    <link href="http://nayijia.xyz/2019/07/26/redis/"/>
    <id>http://nayijia.xyz/2019/07/26/redis/</id>
    <published>2019-07-26T11:06:54.000Z</published>
    <updated>2019-07-26T11:12:46.064Z</updated>
    
    <content type="html"><![CDATA[<p> 命令资料收集</p><p>Redis：<a href="http://doc.redisfans.com/" target="_blank" rel="noopener">http://doc.redisfans.com/</a> </p><p>其他信息：<a href="https://www.runoob.com/redis/redis-tutorial.html" target="_blank" rel="noopener">https://www.runoob.com/redis/redis-tutorial.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt; 命令资料收集&lt;/p&gt;
&lt;p&gt;Redis：&lt;a href=&quot;http://doc.redisfans.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://doc.redisfans.com/&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;其他信息：&lt;a hre
      
    
    </summary>
    
      <category term="redis" scheme="http://nayijia.xyz/categories/redis/"/>
    
    
      <category term="redis" scheme="http://nayijia.xyz/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>lua</title>
    <link href="http://nayijia.xyz/2019/07/26/lua/"/>
    <id>http://nayijia.xyz/2019/07/26/lua/</id>
    <published>2019-07-26T02:40:40.000Z</published>
    <updated>2019-07-26T11:13:06.930Z</updated>
    
    <content type="html"><![CDATA[<h2 id="设计目的"><a href="#设计目的" class="headerlink" title="设计目的"></a>设计目的</h2><p>其设计目的是为了嵌入应用程序中，从而为应用程序提供灵活的扩展和定制功能。</p><h2 id="Lua-特性"><a href="#Lua-特性" class="headerlink" title="Lua 特性"></a>Lua 特性</h2><ul><li><strong>轻量级</strong>: 它用标准C语言编写并以源代码形式开放，编译后仅仅一百余K，可以很方便的嵌入别的程序里。</li><li><strong>可扩展</strong>: Lua提供了非常易于使用的扩展接口和机制：由宿主语言(通常是C或C++)提供这些功能，Lua可以使用它们，就像是本来就内置的功能一样。</li><li>其它特性:<ul><li>支持面向过程(procedure-oriented)编程和函数式编程(functional programming)；</li><li>自动内存管理；只提供了一种通用类型的表（table），用它可以实现数组，哈希表，集合，对象；</li><li>语言内置模式匹配；闭包(closure)；函数也可以看做一个值；提供多线程（协同进程，并非操作系统所支持的线程）支持；</li><li>通过闭包和table可以很方便地支持面向对象编程所需要的一些关键机制，比如数据抽象，虚函数，继承和重载等。</li></ul></li></ul><h2 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World!"></a>Hello World!</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(&quot;Hello World!&quot;)</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="Lua-基本语法"><a href="#Lua-基本语法" class="headerlink" title="Lua 基本语法"></a>Lua 基本语法</h1><h3 id="交互式编程"><a href="#交互式编程" class="headerlink" title="交互式编程"></a>交互式编程</h3><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; print(&quot;Hello World！&quot;)</span><br><span class="line">&gt; Hello World！</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote></blockquote><h2 id="脚本式编程"><a href="#脚本式编程" class="headerlink" title="脚本式编程"></a>脚本式编程</h2><p>​    将下列代码存储在名为 hello.lua 的脚本文件中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(&quot;Hello World！&quot;)</span><br><span class="line">print(&quot;www.runoob.com&quot;)</span><br></pre></td></tr></table></figure><p>使用 lua 名执行以上脚本，输出结果为：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ lua hello.lua</span><br><span class="line">Hello World！</span><br><span class="line">www.runoob.com</span><br></pre></td></tr></table></figure><p>我们也可以将代码修改为如下形式来执行脚本（在开头添加：#!/usr/local/bin/lua）：</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>#!/usr/<strong>local</strong>/bin/lua</p><p>print(“Hello World！”)<br>print(“<a href="http://www.runoob.com&quot;" target="_blank" rel="noopener">www.runoob.com&quot;</a>)</p><p>以上代码中，我们指定了 Lua 的解释器 /usr/local/bin directory。加上 # 号标记解释器会忽略它。接下来我们为脚本添加可执行权限，并执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./hello.lua </span><br><span class="line">Hello World！</span><br><span class="line">www.runoob.com</span><br></pre></td></tr></table></figure><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><h3 id="单行注释"><a href="#单行注释" class="headerlink" title="单行注释"></a>单行注释</h3><p>两个减号是单行注释:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--</span><br></pre></td></tr></table></figure><h3 id="多行注释"><a href="#多行注释" class="headerlink" title="多行注释"></a>多行注释</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">--[[</span><br><span class="line"> 多行注释</span><br><span class="line"> 多行注释</span><br><span class="line"> --]]</span><br></pre></td></tr></table></figure><p>其他lua相关知识均可参考下面两个链接:</p><p><a href="https://www.jb51.net/article/136109.htm" target="_blank" rel="noopener">https://www.jb51.net/article/136109.htm</a> </p><p><a href="https://www.runoob.com/lua/lua-environment.html" target="_blank" rel="noopener">https://www.runoob.com/lua/lua-environment.html</a> </p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;设计目的&quot;&gt;&lt;a href=&quot;#设计目的&quot; class=&quot;headerlink&quot; title=&quot;设计目的&quot;&gt;&lt;/a&gt;设计目的&lt;/h2&gt;&lt;p&gt;其设计目的是为了嵌入应用程序中，从而为应用程序提供灵活的扩展和定制功能。&lt;/p&gt;
&lt;h2 id=&quot;Lua-特性&quot;&gt;&lt;a href=&quot;#Lua-特性&quot; class=&quot;headerlink&quot; title=&quot;Lua 特性&quot;&gt;&lt;/a&gt;Lua 特性&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;轻量级&lt;/strong&gt;: 它用标准C语言编写并以源代码形式开放，编译后仅仅一百余K，可以很方便的嵌入别的程序里。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可扩展&lt;/strong&gt;: Lua提供了非常易于使用的扩展接口和机制：由宿主语言(通常是C或C++)提供这些功能，Lua可以使用它们，就像是本来就内置的功能一样。&lt;/li&gt;
&lt;li&gt;其它特性:&lt;ul&gt;
&lt;li&gt;支持面向过程(procedure-oriented)编程和函数式编程(functional programming)；&lt;/li&gt;
&lt;li&gt;自动内存管理；只提供了一种通用类型的表（table），用它可以实现数组，哈希表，集合，对象；&lt;/li&gt;
&lt;li&gt;语言内置模式匹配；闭包(closure)；函数也可以看做一个值；提供多线程（协同进程，并非操作系统所支持的线程）支持；&lt;/li&gt;
&lt;li&gt;通过闭包和table可以很方便地支持面向对象编程所需要的一些关键机制，比如数据抽象，虚函数，继承和重载等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Hello-World&quot;&gt;&lt;a href=&quot;#Hello-World&quot; class=&quot;headerlink&quot; title=&quot;Hello World!&quot;&gt;&lt;/a&gt;Hello World!&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;print(&amp;quot;Hello World!&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="lua" scheme="http://nayijia.xyz/categories/lua/"/>
    
    
      <category term="lua" scheme="http://nayijia.xyz/tags/lua/"/>
    
  </entry>
  
  <entry>
    <title>Linux命令收集</title>
    <link href="http://nayijia.xyz/2019/07/24/Linux%E5%91%BD%E4%BB%A4%E6%94%B6%E9%9B%86/"/>
    <id>http://nayijia.xyz/2019/07/24/Linux命令收集/</id>
    <published>2019-07-24T05:44:27.000Z</published>
    <updated>2019-07-25T02:04:26.634Z</updated>
    
    <content type="html"><![CDATA[<h2 id="批量杀死进程命令"><a href="#批量杀死进程命令" class="headerlink" title="批量杀死进程命令"></a>批量杀死进程命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef|grep boco|grep -v grep|awk &apos;&#123;print &quot;kill -9 &quot;$2&#125;&apos;</span><br></pre></td></tr></table></figure><ol><li>ps -ef|grep aaa|grep -v grep   </li></ol><p>这是大家很熟悉的命令，这里就不再多说，就是从当前系统运行的进程的进程名中包含aaa关键字的进程。</p><ol start="2"><li>后面部分就是awk命令了，一般awk命令的格式为：awk ‘ pattern {action} ‘</li></ol><p>​    print是打印，kill -9 是强制停止进程的命令， $2就是前面有ps -ef命令得出的结果的第二列上显示的内容。</p><a id="more"></a><p>下面举一个简单的例子：</p><p>#ps -ef|grep boco|grep -v grep<br>    root  9884  9883  0 17:10:01 ?         0:00 sendmail -oem -oi -froot boco<br>    root  9883  9880  0 17:10:01 ?         0:00 /usr/bin/mail boco<br>    boco 11112     1  0  Dec 24  ?         0:00 ./boco_appmaster -d /home/boco/agent<br>    boco 11126 11125 61  Dec 24  ?        52:59 ./boco_hostagent -i socket -l<br>    boco 11125 11112 37  Dec 24  ?        43:25 ./boco_appmaster -d /home/boco/agent<br>#ps -ef|grep boco|grep -v grep|awk ‘{print “kill -9 “$2}’<br>kill -9 9884<br>kill -9 9883<br>kill -9 11112<br>kill -9 11126<br>kill -9 11125</p><p> 可以看出，ps -ef|grep boco|grep -v grep列出了当前主机中运行的进程中包含boco关键字的进程</p><p>而ps -ef|grep boco|grep -v grep|awk ‘{print “kill -9 “$2}’则列出了要kill掉这些进程的命令，并将之打印在了屏幕上</p><p>在ps -ef|grep boco|grep -v grep|awk ‘{print “kill -9 “$2}’后面加上|sh后，则执行这些命令，进而杀掉了这些进程。</p><p>示例：ps -aux|grep “service_2.php”|awk ‘{print “kill -9 “$2}’|sh</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;批量杀死进程命令&quot;&gt;&lt;a href=&quot;#批量杀死进程命令&quot; class=&quot;headerlink&quot; title=&quot;批量杀死进程命令&quot;&gt;&lt;/a&gt;批量杀死进程命令&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ps -ef|grep boco|grep -v grep|awk &amp;apos;&amp;#123;print &amp;quot;kill -9 &amp;quot;$2&amp;#125;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ol&gt;
&lt;li&gt;ps -ef|grep aaa|grep -v grep   &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这是大家很熟悉的命令，这里就不再多说，就是从当前系统运行的进程的进程名中包含aaa关键字的进程。&lt;/p&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;后面部分就是awk命令了，一般awk命令的格式为：awk ‘ pattern {action} ‘&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​    print是打印，kill -9 是强制停止进程的命令， $2就是前面有ps -ef命令得出的结果的第二列上显示的内容。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://nayijia.xyz/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Typora快捷键收集</title>
    <link href="http://nayijia.xyz/2019/07/24/typora%E5%BF%AB%E6%8D%B7%E9%94%AE%E6%94%B6%E9%9B%86/"/>
    <id>http://nayijia.xyz/2019/07/24/typora快捷键收集/</id>
    <published>2019-07-24T05:37:48.000Z</published>
    <updated>2019-07-29T05:48:58.628Z</updated>
    
    <content type="html"><![CDATA[<h1 id="对文字的特殊标注"><a href="#对文字的特殊标注" class="headerlink" title="对文字的特殊标注"></a>对文字的特殊标注</h1><p>标题    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 一阶标题  或者快捷键Ctrl+1</span><br><span class="line">## 二阶标题 或者快捷键Ctrl+2</span><br><span class="line">### 三阶标题    或者快捷键Ctrl+3</span><br><span class="line">#### 四阶标题   或者快捷键Ctrl+4</span><br><span class="line">##### 五阶标题  或者快捷键Ctrl+5</span><br><span class="line">###### 六阶标题 或者快捷键Ctrl+6</span><br></pre></td></tr></table></figure><p>下划线</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;u&gt;下划线的内容&lt;/u&gt; 或按快捷键Ctrl+U</span><br></pre></td></tr></table></figure><a id="more"></a><p>字体加粗</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">**加粗内容**    或按快捷键Ctrl+B</span><br></pre></td></tr></table></figure><p>斜体</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*倾斜内容*  或按快捷键Ctrl+I</span><br></pre></td></tr></table></figure><p>删除线</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~删除线的内容~~  或按快捷键Alt+Shift+5</span><br></pre></td></tr></table></figure><p>文字高亮</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">==我是最重要的==</span><br></pre></td></tr></table></figure><p>角标</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x^2^    H~2~O</span><br></pre></td></tr></table></figure><p>list<br>有序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">数字+英文小数点(.)+空格</span><br></pre></td></tr></table></figure><p>无序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">+ 、- 、* 创建无序列，任意数字开始+空格创建有序列表</span><br></pre></td></tr></table></figure><p>Todolist</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- [ ] 参加会议</span><br><span class="line">- [x] 中超足球赛</span><br></pre></td></tr></table></figure><p>Table</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">快捷键Ctrl+T弹出对话框</span><br></pre></td></tr></table></figure><p>分割线</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">***+回车  </span><br><span class="line">---+回车</span><br></pre></td></tr></table></figure><h1 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h1><p>图片</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">![图片内容](http://t10.baidu.com/it/u=1069603383,3074552113&amp;fm=170&amp;s=771B15C75C12D8D61C3C69FB0300501F&amp;w=640&amp;h=426&amp;img.JPEG)</span><br><span class="line"> 也可使用快捷键Ctrl+K</span><br><span class="line">PS：也可将图片直接拖拽进来，自动生成链接</span><br></pre></td></tr></table></figure><p>链接<br>内行式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[百度一下，你就知道](https://www.baidu.com/)</span><br></pre></td></tr></table></figure><p>参考式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[百度一下，你就知道][]https://www.baidu.com/          # 第二个括号内可任意填写(不显)</span><br><span class="line">​</span><br></pre></td></tr></table></figure><p>[百度一下，你就知道][]<a href="https://www.baidu.com/" target="_blank" rel="noopener">https://www.baidu.com/</a></p><p>快速链接<br>​<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;http://www.baidu.com&gt;</span><br><span class="line">PS：按住Ctrl点击链接可直接打开。</span><br><span class="line">​</span><br></pre></td></tr></table></figure></p><p>#数学公式（简）<br>​<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Typora支持加入用LaTeX写成的数学公式，并且在软件界面下用MathJax直接渲染。</span><br><span class="line">​</span><br></pre></td></tr></table></figure></p><p>*1.行内公式(inline math)，可以在偏好设置中单独打开，由一个美元符号将公式围起来；name=\prod \frac{1}{i^2}$<br>*2.行外公式，直接按Ctrl+Shift+M；(双$+回车也可做到)<br>​<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">注：上标和下标可以使用数学表达式来获取</span><br><span class="line">​</span><br></pre></td></tr></table></figure></p><p>#其余</p><p>引用<br>​<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;+空格    或按快捷键Ctrl+Shift+Q</span><br><span class="line">​</span><br></pre></td></tr></table></figure></p><p>注释<br>要添加注释的文字<br>​<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这是我们的标号[^1]</span><br><span class="line">[^1]:标号的含义</span><br><span class="line">​</span><br></pre></td></tr></table></figure></p><p>表情</p><p>​<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">:单词:</span><br><span class="line">​</span><br></pre></td></tr></table></figure></p><p>目录<br>​<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[TOC]</span><br><span class="line">​</span><br></pre></td></tr></table></figure></p><p>Typora快捷键整合<br>​<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+1  一阶标题    Ctrl+B  字体加粗</span><br><span class="line">Ctrl+2  二阶标题    Ctrl+I  字体倾斜</span><br><span class="line">Ctrl+3  三阶标题    Ctrl+U  下划线</span><br><span class="line">Ctrl+4  四阶标题    Ctrl+Home   返回Typora顶部</span><br><span class="line">Ctrl+5  五阶标题    Ctrl+End    返回Typora底部</span><br><span class="line">Ctrl+6  六阶标题    Ctrl+T  创建表格</span><br><span class="line">Ctrl+L  选中某句话   Ctrl+K  创建超链接</span><br><span class="line">Ctrl+D  选中某个单词  Ctrl+F  搜索</span><br><span class="line">Ctrl+E  选中相同格式的文字   Ctrl+H  搜索并替换</span><br><span class="line">Alt+Shift+5 删除线 Ctrl+Shift+I    插入图片</span><br><span class="line">Ctrl+Shift+M    公式块 Ctrl+Shift+Q    引用</span><br><span class="line"></span><br><span class="line">注：一些实体符号需要在实体符号之前加”\”才能够显示</span><br><span class="line">​</span><br></pre></td></tr></table></figure></p><pre><code></code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;对文字的特殊标注&quot;&gt;&lt;a href=&quot;#对文字的特殊标注&quot; class=&quot;headerlink&quot; title=&quot;对文字的特殊标注&quot;&gt;&lt;/a&gt;对文字的特殊标注&lt;/h1&gt;&lt;p&gt;标题    &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 一阶标题  或者快捷键Ctrl+1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## 二阶标题 或者快捷键Ctrl+2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;### 三阶标题    或者快捷键Ctrl+3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#### 四阶标题   或者快捷键Ctrl+4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;##### 五阶标题  或者快捷键Ctrl+5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;###### 六阶标题 或者快捷键Ctrl+6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;下划线&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;u&amp;gt;下划线的内容&amp;lt;/u&amp;gt; 或按快捷键Ctrl+U&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="typora" scheme="http://nayijia.xyz/tags/typora/"/>
    
  </entry>
  
</feed>
